#!/usr/bin/env ruby

require 'fileutils'
require 'haml'
require 'tilt/haml'

BUILD_DIR = 'build'
PAGES_DIR = 'pages'
STATIC_DIR = 'static'
BASE_LAYOUT_PATH = 'templates/layout.haml'

#-------------------------------#
# Create the `build/` directory #
#-------------------------------#

if File.directory?(BUILD_DIR)
  FileUtils.rm_r(BUILD_DIR)
end
FileUtils.mkdir(BUILD_DIR)

#---------------------------------#
# Copy static files into `build/` #
#---------------------------------#

FileUtils.cp_r(File.join(STATIC_DIR, '.'), BUILD_DIR)

#-----------------------------------#
# Generate HTML pages into `build/` #
#-----------------------------------#

# Load the base layout
base_layout_tmpl = Tilt::HamlTemplate.new(BASE_LAYOUT_PATH)
# Find all the HAML page files
haml_page_paths = Dir.glob(File.join(PAGES_DIR, '**', '*.haml'))
# Loop through all the pages, generate them, and write them
haml_page_paths.each do |haml_page_path|
  # Determine where the HTML file will get written to
  output_path = haml_page_path.sub(PAGES_DIR, BUILD_DIR).sub(/.haml$/, '.html')
  # The file may be in a subdirectory, which we'll need to create
  FileUtils.mkdir_p(File.dirname(output_path))
  # Load the HAML page file
  page_tmpl = Tilt::HamlTemplate.new(haml_page_path)
  # Render the page
  html_content = base_layout_tmpl.render { page_tmpl.render }
  # Write the page
  File.open(output_path, 'w') { |file| file.write(html_content) }
end
